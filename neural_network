# -*- coding: utf-8 -*-
"""
Created on Wed Jul 18 21:11:54 2018
neural network
@author: Administrator
"""
from mpl_toolkits.mplot3d import Axes3D#3D用
import matplotlib.pyplot as plt#显示２Ｄ画图
import numpy as np#ＮＵＭＰＹ用
from matplotlib import cm#画图里面的
import os#系统操作
import time#时间
import webbrowser#网页
import pandas as pd
import re
import math
'''
首先以3，3，1为例
前向传播……………………
第一层:
X0=1,X1,X2,X3

第二层：
a1^2=g(theta10 x 1 + theta11 x x1 + theta12 x x2 + theta13 x x3)
a2^2=g(theta20 x 1 + theta21 x x1 + theta22 x x2 + theta23 x x3)
a3^2=g(theta30 x 1 + theta31 x x1 + theta32 x x2 + theta33 x x3)

第三层：
a1^3=g(theta10 x 1 + theta11 x a1 + theta12 x a2 + theta13 x a3)




反向传播......
第三层：
LLL31= yi-a1^3

第二层：theta1.T X=theta10 x 1 + theta11 x x1 + theta12 x x2 + theta13 x x3
LLL21= (theta1.T *LLL31)*(g'(z(3)))       a(3) * (1-a(3))

'''

###########文本文件读取后，进行处理成我们想要的数据##################
def filepro(filename):

    numFeat = len(open(filename).readline().split('\t')) - 1
    X = []
    y = []

    file = open(filename)
    for line in file.readlines():#列出每一行
        lineArr = []#必须要重新来付值
        
        curLine = line.strip().split('\t')#去掉数据中　头和尾的空格

        for i in range(numFeat):#
            lineArr.append(float(curLine[i]))#每个数组里面去掉最后一个
        
        X.append(lineArr)
        y.append(float(curLine[-1]))

    return np.mat(X), np.mat(y).T
#把Ｘ转换成矩阵，把Ｙ转置，变成向量Ｙ

# theta * x= theta0+theta1*x1 + theta2*x2 + theta3*x3......thetan*xn
def z(theta,a):
    return (theta.T)*a
# g(1/exp^theta.T*x) this is sigmod funtion
def g(x):
    return 1/(1+np.exp(-(x)))
def a(x):
    return g(z(theta,a))
    
#g（z(a))求导 ＝ a*(1-a)
def daot(theta,a,y,layer,maxlayer):
    if(layer==maxlayer):
        return a(x)-y
    elif(layer>1):
        return(theta.T*daot(layer))* (a*(1-a))
    else:
        pass
        







